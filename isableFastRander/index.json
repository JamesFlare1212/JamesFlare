[{"categories":["Games"],"content":"前情提要 既定时间：2023年1月15日下午14:00 ","date":"2023-01-14","objectID":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/:1:0","tags":["WoWs"],"title":"战舰世界8vs8计划","uri":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/"},{"categories":["Games"],"content":"地图池\u0026模式 阶段8vs8，三局两胜队伍晋级 沉睡的巨人、统治模式 北极光、三区域统治 崇山峻岭、标准战+气旋 阶段4vs4，单局，获胜队伍晋级 隔海相望，标准战、无气旋 阶段2vs2，单局，获胜队伍晋级 河口，标准战、无气旋 阶段1vs1，单局，获胜者为最终赢家 海洋、无点位模式 ","date":"2023-01-14","objectID":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/:1:1","tags":["WoWs"],"title":"战舰世界8vs8计划","uri":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/"},{"categories":["Games"],"content":"比赛规则 每场比赛最长时间为20分钟，若出现平局，则进行重赛，请大家在比赛开始前25分钟进场 使用船只为X级战舰， 8vs8每方1CV、3BB、3CA/CL、2DD 4vs4每方1BB、2CA/CL、1DD 2vs2及1vs1模式中，可任意使用BB/CA/CL，双方不要求对称 本次比赛谢绝SS水下小人参赛 8vs8模式比赛开始前5分钟，进入Ban阶段，该阶段内，由双方领队与队员商议，开始先由比赛裁判抽签决定从一方开始禁用船只，每次禁用1艘战舰，每队有两次机会，双方交替进行 每一阶段比赛结束，获胜方晋级，随后随机分配进入下一阶段比赛 每方队伍内不得拥有两艘以上相同战舰 ","date":"2023-01-14","objectID":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/:1:2","tags":["WoWs"],"title":"战舰世界8vs8计划","uri":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/"},{"categories":["Games"],"content":"阵容 序号代表优先级 二级列表代表下位替代，也就是如果被Ban了选的替代品 同一船只最多两个 ","date":"2023-01-14","objectID":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/:2:0","tags":["WoWs"],"title":"战舰世界8vs8计划","uri":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/"},{"categories":["Games"],"content":"CV * 1 航空母舰 纳西莫夫 (JamesFlare_1212) 马克思·因麦曼 (JamesFlare_1212) 马耳他 (JamesFlare_1212) ","date":"2023-01-14","objectID":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/:2:1","tags":["WoWs"],"title":"战舰世界8vs8计划","uri":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/"},{"categories":["Games"],"content":"BB * 3 战列舰 圣文森特 (huan5325) 征服者 俄亥俄 (killer_munber47) 蒙大拿 (killer_munber47) 勃艮第 八岛 ","date":"2023-01-14","objectID":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/:2:2","tags":["WoWs"],"title":"战舰世界8vs8计划","uri":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/"},{"categories":["Games"],"content":"CA * 3 巡洋舰 那不勒斯 (huan5325) 莫斯科 (XIAONAN819) 歌利亚 威尼斯 (huan5325) 斯大林格勒 (XIAONAN819) ","date":"2023-01-14","objectID":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/:2:3","tags":["WoWs"],"title":"战舰世界8vs8计划","uri":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/"},{"categories":["Games"],"content":"DD * 1 驱逐舰 斯莫兰 (CyberDragonInfinity) 果敢 (CyberDragonInfinity) 克莱贝尔 (CyberDragonInfinity) 德尔尼 玛索 哈巴洛夫斯克 ","date":"2023-01-14","objectID":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/:2:4","tags":["WoWs"],"title":"战舰世界8vs8计划","uri":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/"},{"categories":["Games"],"content":"打战损 由于空中有航母，水面有雷达，火力凶猛，初期和中期几乎不能进行点位的争夺，所以消灭对方有生力量是较好的战术。 由此可以得出次目标 保命 击杀 ","date":"2023-01-14","objectID":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/:3:0","tags":["WoWs"],"title":"战舰世界8vs8计划","uri":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/"},{"categories":["Games"],"content":"保命 说白了就是别死，和随机有些不一样，对手一般都会有沟通，所以常用的灭点跑路可能有难度。 所以在自己上的时候最好就想好退路，看看走到哪里能灭点，或者进山。 比如满血上去，就剩半血了，消耗品还不太OK了的时候就该转走了，被卡住损管就惨了， 当然，如果在打得到对面的情况下，拖刀是最好的选择，15km，16km拖刀射击。 ","date":"2023-01-14","objectID":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/:3:1","tags":["WoWs"],"title":"战舰世界8vs8计划","uri":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/"},{"categories":["Games"],"content":"分担火力 这对战列舰来说比较重要，因为你们有巨大的血池，打到你们身上的伤害就不会打到巡洋舰身上，于是就活了。 也就是看时机上前，被打个几万之后撤走，等保健和损管好了再靠近，如此往复不停消耗。 ","date":"2023-01-14","objectID":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/:3:2","tags":["WoWs"],"title":"战舰世界8vs8计划","uri":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/"},{"categories":["Games"],"content":"集火 这是最重要的，目的是打死对面而不是打出很多伤害，因为可能战列舰吃个100k伤害还活着半血，如果这么多伤害打到巡洋舰身上，那大概率已经到海底了。 所以，集火优先级是 驱逐舰 巡洋舰 战列舰 谁血池少打谁，其次是谁机动不好打谁，因为这样可以保证有效命中保证输出效率。 除了集火这些目标，还有对残血的目标也要赶紧补刀，它的优先级应该是最高的，因为一旦让对方逃走，再见可能是半血了，然后反手把你杀了。 比如征服者，圣文森特，歌莉娅，蒙大拿，俄亥俄。 ","date":"2023-01-14","objectID":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/:3:3","tags":["WoWs"],"title":"战舰世界8vs8计划","uri":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/"},{"categories":["Games"],"content":"拉交叉 这是第二重要的，特别对于战列舰等AP火力而言。 就是说别都去边线，相对分散， 当然，在同时也要避免别人从边线推上来，打自己人的夹角。 ","date":"2023-01-14","objectID":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/:3:4","tags":["WoWs"],"title":"战舰世界8vs8计划","uri":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/"},{"categories":["Games"],"content":"控分 ","date":"2023-01-14","objectID":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/:4:0","tags":["WoWs"],"title":"战舰世界8vs8计划","uri":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/"},{"categories":["Games"],"content":"阻止占点 这次比赛这不是很难的事情，一个是因为驱逐少， 还有就是有CV，有不少的巡洋，雷达船，我方还有DD，基本不可能强行占点。 雷达船注意 雷达套住点位 开雷达前提醒队友集火 ","date":"2023-01-14","objectID":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/:4:1","tags":["WoWs"],"title":"战舰世界8vs8计划","uri":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/"},{"categories":["Games"],"content":"占点 开局避免进点，因为基本上必死，见机行动。 看看中后期有没有机会占点，驱逐活着是第一要务。 ","date":"2023-01-14","objectID":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/:4:2","tags":["WoWs"],"title":"战舰世界8vs8计划","uri":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/"},{"categories":["Games"],"content":"地图 本次比赛有3张地图 Sleeping Giant 沉睡的巨人 Northern Lights 北极光 Mountain Range 崇山峻岭 ","date":"2023-01-14","objectID":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/:5:0","tags":["WoWs"],"title":"战舰世界8vs8计划","uri":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/"},{"categories":["Games"],"content":"沉睡的巨人 Sleeping Giant\r尺寸 42*42km 官方YouTube视频 ","date":"2023-01-14","objectID":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/:5:1","tags":["WoWs"],"title":"战舰世界8vs8计划","uri":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/"},{"categories":["Games"],"content":"北极光 Northern Lights\r尺寸 48*48km 官方YouTube视频 ","date":"2023-01-14","objectID":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/:5:2","tags":["WoWs"],"title":"战舰世界8vs8计划","uri":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/"},{"categories":["Games"],"content":"崇山峻岭 Mountain Range\r尺寸 48*48km Tips 这把比赛有气旋 ","date":"2023-01-14","objectID":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/:5:3","tags":["WoWs"],"title":"战舰世界8vs8计划","uri":"/posts/%E6%88%98%E8%88%B0%E4%B8%96%E7%95%8C8vs8%E8%AE%A1%E5%88%92/"},{"categories":["Cards"],"content":"\r贺卡\r","date":"2023-01-13","objectID":"/posts/for%E6%9D%A8%E6%96%87%E9%9B%85/:0:0","tags":["Gifts","Friends"],"title":"For 杨文雅","uri":"/posts/for%E6%9D%A8%E6%96%87%E9%9B%85/"},{"categories":["Cards"],"content":"Intro 本页是一份现代化的贺卡，不出意外你将通过二维码扫描获得。 不同于普通的文本，这是富文本，当然我个人还是喜欢戏称其为肥文本。 ","date":"2023-01-13","objectID":"/posts/for%E6%9D%A8%E6%96%87%E9%9B%85/:1:0","tags":["Gifts","Friends"],"title":"For 杨文雅","uri":"/posts/for%E6%9D%A8%E6%96%87%E9%9B%85/"},{"categories":["Cards"],"content":"Review 我想我认识你很久，很久了，属于空前绝后了，以至于我都忘了什么时候认识的了，至少在我可以肯定在四年级以前。我确实没想到都到了要上大学的时候了，高情商的说法是时光飞逝，低情商一些就是不知道时间怎么过的，天天摸鱼。 本人的学术生涯不幸被两个城市和数个学校切得稀碎，现在不是很多人毕业了，发个自己从小到大，学校的定位吗，一般也就三四个，我怕不是要来个七个。有个老师当时说，我真佩服那些转学的人。我当时觉得，这算什么，就这？后来我理解了，那就意味着你和你的朋友们基本上说再见了，重新开始一段新的关系需要勇气，特别是我直接不在一个城市。 我每次离开，总有一群人说舍不得之类的话，有老师也有学生。我当时并不在意，而且本人对那些学校也不是特别满意的样子。现在想想确实有感到一丝难过，特别看见他们有空时爬出去玩的内容。不过讲道理，我从逻辑上是肯定没后悔的，事实也应该如此。至于造成我emo的原因，那是一个人脑的特性。我们回忆时总会选择加强那些美好的部分，而选择性淡化不快乐的内容。 就比如我后来去参加了我当时那个中学，初三的毕业典礼。讲道理，去的时候我感觉很快乐，有一丝兴奋。但是真进了教室感觉不对劲了，况且那天50几人搞得满地都是渣渣，有油，有可乐，有水，还有礼炮的彩色碎片，那种玩意粘得死死的。他们一波全跑了，我爬在那地上清理了3个多小时，搞到下午五点，这。。。无情。 扩展内容， 高铁是怎样破坏回家“形式感”的？【懂点儿啥】\rhttps://www.bilibili.com/video/av380220222\r现在写这post的时候有有些emo了，想到和我有3年以上联系的同学屈指可数（暂时数出来一个），和杨小姐你以前玩的时候多快乐，不久又不知道什么时候相见了，见面时又怎样。导致我更加emo了，可见完美的理论依旧不能缓解我切实的感受（让我知道自己怎么败的）渣渣 human science。 停，到这打住！不行了！ ","date":"2023-01-13","objectID":"/posts/for%E6%9D%A8%E6%96%87%E9%9B%85/:2:0","tags":["Gifts","Friends"],"title":"For 杨文雅","uri":"/posts/for%E6%9D%A8%E6%96%87%E9%9B%85/"},{"categories":["Cards"],"content":"Maths ","date":"2023-01-13","objectID":"/posts/for%E6%9D%A8%E6%96%87%E9%9B%85/:3:0","tags":["Gifts","Friends"],"title":"For 杨文雅","uri":"/posts/for%E6%9D%A8%E6%96%87%E9%9B%85/"},{"categories":["Cards"],"content":"作恶 科技发展迅速，或许没人记得初代iPhone发布的时候，Apple和全世界所有同行的共识就是，智能手机是以浏览器Web为主，扩展电脑PC的一个便携设备。可惜当时的3G网络并没有这样的土壤，所以就有了App这个东西。可似乎事情并没有按照理想发展，现在我们知道，各种臃肿的超级App获取他们不该有的权限，占用夸张的资源，Web端则被不断阉割。 🌐用一个网页，感受「现代互联网」 🔗：Web | 群友汉化版 相信很多读者的浏览器里面，都装了类似 ADBlocker 的广告拦截插件，那是因为大家对各种突如其来的弹窗式广告不胜其扰 今天要介绍的网页可以说足够让人「血压升高」，其中完美地模拟了各种弹窗权限、广告、订阅、引导信息。总有一款，你在现代互联网中会经常遇到 😕不幸的是，Web 2.0 中很多网站都是以注册数、访问量为硬性指标，因为这样可以带来广告阅读收益，并完成公司 KPI。为此，网页运营者可以不顾用户体验，强行加入各种引导式弹窗和狗皮膏药广告，国内还有「下载手机 App 并查看」这样的特色 🧐作为一个每天在电脑上阅读大量网站的人，我对现在的网页现状感到痛心，但也只能通过安装一些拦截插件来缓解。界面整洁、尊重读者、维持好赢利和阅读体验的关系，对网站所有者本身是一个很大的挑战，这样的网页和社区，也正在逐渐消失、妥协 @NewlearnerChannel 希望你在拥有强大的工具后提升工作的体验，享受科技带来的美好生活。 ","date":"2023-01-13","objectID":"/posts/for%E6%9D%A8%E6%96%87%E9%9B%85/:3:1","tags":["Gifts","Friends"],"title":"For 杨文雅","uri":"/posts/for%E6%9D%A8%E6%96%87%E9%9B%85/"},{"categories":["Cards"],"content":"开始数学之旅 你选了数学作为你的专业，那不出意外你很快会开始探索当代生活的底层逻辑。典中典的就是我开头的二维码，六十年前一篇不到五页的论文，如今成为当代现代生活底层无数的基石之一，无人问津但却伟大。 有兴趣可以看看，Paper的名字叫 POLYNOMIAL CODES OVER CERTAIN FINITE FIELDS，基于特定有限域的多项式编码。文件如下 RS-1960.pdf\r/posts/for%E6%9D%A8%E6%96%87%E9%9B%85/RS-1960.pdf\r下面算是一些扩展内容了，你想过，什么是数学吗。它很特别，可能是人类最接近完美的理论（原则上它必须完美，否者 1 + 1 ≠ 2 了那岂不是乱套）。没有不确定性，比如物理头顶的乌云，笑。但事情也不那么绝对。 数学并不完备，数学有一个致命缺陷\rhttps://www.bilibili.com/video/av760865508?p=1\r数学决斗，虚数的来源\rhttps://www.bilibili.com/video/av209212793?p=1\r","date":"2023-01-13","objectID":"/posts/for%E6%9D%A8%E6%96%87%E9%9B%85/:3:2","tags":["Gifts","Friends"],"title":"For 杨文雅","uri":"/posts/for%E6%9D%A8%E6%96%87%E9%9B%85/"},{"categories":["Cards"],"content":"Sources 最后，考虑到这是本人建的第n个网站了（搞没好几个），所以有兴趣的话还是离线保存本页吧，不然哪天没了就，整活了。Ctrl + P 或 Comand + P 以打印网页为PDF，或右键网页另存为。 Adobe Illustrator 项目原文件 for杨文雅.ai\r/posts/for%E6%9D%A8%E6%96%87%E9%9B%85/for%E6%9D%A8%E6%96%87%E9%9B%85.ai\r","date":"2023-01-13","objectID":"/posts/for%E6%9D%A8%E6%96%87%E9%9B%85/:4:0","tags":["Gifts","Friends"],"title":"For 杨文雅","uri":"/posts/for%E6%9D%A8%E6%96%87%E9%9B%85/"},{"categories":["Tutorials"],"content":"Intro 这可能是中文互联网上唯一一篇讲如何全栈部署Excalidraw的，绝大多数只是部署了一个残血的前端。 本人试图在本地私有化部署Excalidraw，操作是很简单，根据官方的README，一会就完成了是吧。 ","date":"2023-01-13","objectID":"/posts/excalidraw%E5%85%A8%E5%8A%9F%E8%83%BD%E8%87%AA%E9%83%A8%E7%BD%B2/:1:0","tags":["Open Source"],"title":"Excalidraw全功能自部署","uri":"/posts/excalidraw%E5%85%A8%E5%8A%9F%E8%83%BD%E8%87%AA%E9%83%A8%E7%BD%B2/"},{"categories":["Tutorials"],"content":"Issue 但是有没有发现，分享链接和在线协作有问题，用不了？甚至Libraries还有点问题？ 这是因为，几乎全网的搭建教程都只是搭建了excalidraw-app这个前端，它的存储需要excalidraw-json，协作需要excalidraw-room。 这些代码官方都开源了，不过前端的进度实在是太快了，于是乎这些就都用不了了。 比如官方开放的excalidraw-json是S3的存储，现在不出意外是firebase，官方也没出个剥离的版本，那我们怎么办呢？ ","date":"2023-01-13","objectID":"/posts/excalidraw%E5%85%A8%E5%8A%9F%E8%83%BD%E8%87%AA%E9%83%A8%E7%BD%B2/:1:1","tags":["Open Source"],"title":"Excalidraw全功能自部署","uri":"/posts/excalidraw%E5%85%A8%E5%8A%9F%E8%83%BD%E8%87%AA%E9%83%A8%E7%BD%B2/"},{"categories":["Tutorials"],"content":"Solution 答，降级，构建全栈。 excalidraw-app我们用官方的，不过版本差不多是9个月前的，讲道理，功能也没少多少，bug也没什么问题，这一代前端可以很好兼容。 excalidraw-json是用不得了，国外也有一些方案用minio来跑S3对接它，但是我测试了，问题有些大，这个后端应该是用不得了，所幸的是，我找到了一个第三方，用自己代码实现的全功能后端，支持v2的api，excalidraw-storage-backend。 excalidraw-room我们用官方的，最新一版，差不多是9个月前的，和前端一致，可以正常使用。 redis，这个是excalidraw-storage-backend所需要的，用于临时存储分享画板的数据，所以它不能保证数据可靠性。 那我们开始吧，本方案使用docker-compose。 excalidraw-app excalidraw-room excalidraw-storage-backend redis ","date":"2023-01-13","objectID":"/posts/excalidraw%E5%85%A8%E5%8A%9F%E8%83%BD%E8%87%AA%E9%83%A8%E7%BD%B2/:1:2","tags":["Open Source"],"title":"Excalidraw全功能自部署","uri":"/posts/excalidraw%E5%85%A8%E5%8A%9F%E8%83%BD%E8%87%AA%E9%83%A8%E7%BD%B2/"},{"categories":["Tutorials"],"content":"Operation Docker Compose配置 version: \"3.8\" services: excalidraw: image: kiliandeca/excalidraw healthcheck: disable: true ports: - \"80:80\" # 默认端口80，可以修改 environment: BACKEND_V2_GET_URL: http://localhost:8080/api/v2/scenes/ BACKEND_V2_POST_URL: http://localhost:8080/api/v2/scenes/ LIBRARY_URL: https://libraries.excalidraw.com LIBRARY_BACKEND: https://us-central1-excalidraw-room-persistence.cloudfunctions.net/libraries SOCKET_SERVER_URL: http://localhost:5000/ STORAGE_BACKEND: \"http\" HTTP_STORAGE_BACKEND_URL: \"http://localhost:8080/api/v2\" excalidraw-storage-backend: image: kiliandeca/excalidraw-storage-backend ports: - \"8080:8080\" environment: STORAGE_URI: redis://redis:6379 excalidraw-room: image: excalidraw/excalidraw-room ports: - \"5000:80\" redis: image: redis ports: - \"6379:6379\" 本身不支持https，如有需要可以通过反向代理实现，不过记得同时修改environment中的变量 此配置文件经本地测试通过，可完美运行。 如果你6379端口有冲突，那可以选择构建一个network docker network create excalidraw-net 然后像这样对其进行一些修改，就完成了 version: \"3.8\" services: excalidraw: image: kiliandeca/excalidraw healthcheck: disable: true ports: - \"80:80\" environment: BACKEND_V2_GET_URL: http://localhost:8080/api/v2/scenes/ BACKEND_V2_POST_URL: http://localhost:8080/api/v2/scenes/ LIBRARY_URL: https://libraries.excalidraw.com LIBRARY_BACKEND: https://us-central1-excalidraw-room-persistence.cloudfunctions.net/libraries SOCKET_SERVER_URL: http://localhost:5000/ STORAGE_BACKEND: \"http\" HTTP_STORAGE_BACKEND_URL: \"http://localhost:8080/api/v2\" excalidraw-storage-backend: image: kiliandeca/excalidraw-storage-backend ports: - \"8080:8080\" environment: STORAGE_URI: redis://redis:6379 excalidraw-room: image: excalidraw/excalidraw-room ports: - \"5000:80\" redis: image: redis expose: - \"6379\" networks: default: external: name: excalidraw-net ","date":"2023-01-13","objectID":"/posts/excalidraw%E5%85%A8%E5%8A%9F%E8%83%BD%E8%87%AA%E9%83%A8%E7%BD%B2/:2:0","tags":["Open Source"],"title":"Excalidraw全功能自部署","uri":"/posts/excalidraw%E5%85%A8%E5%8A%9F%E8%83%BD%E8%87%AA%E9%83%A8%E7%BD%B2/"},{"categories":["Tutorials"],"content":"Run 找一个，或者新建一个目录，创建docker-compose文件 nano docker-compose.yml 填入docker-compose配置，记得按你的实际情况修改。 随后我们要配置一下反向代理，我的Web Server是OpenLiteSpeed，其他的同理。 首先需要创建External App，类型是Web Server，一共三个，分别对应 excalidraw excalidraw-room excalidraw-storage-backend 名字可以相对应，下面三个是必填的，可以参考我的配置 Setting Value Max Connections 2000 Initial Request Timeout (secs) 60 Retry Timeout (secs) 0 地址端口对应docker-compose中的。 随后我们需要创建一个Vitrual Host，以下供参考 Setting Value Virtual Host Name excalidraw Virtual Host Root excalidraw Config File conf/vhosts/$VH_NAME/vhconf.conf Max Keep-Alive Requests 20000 Follow Symbolic Link Yes Enable Scripts/ExtApps Yes Restrained Yes Enable GZIP Compression Yes Enable Brotli Compression Yes 在创建Vitrual Host之前你需要在/usr/local/lsws下创建一个目录 mkdir /usr/local/lsws/excalidraw 然后完成引导选项，不知道怎么填的话可以参考上面的参数。 也可以参照OpenLiteSpeed：从入门到放弃-荒岛 (lala.im) 我们就可以去Rewrite里配置了，添加如下Rewrite Rules RewriteCond %{SERVER_PORT} ^80$ RewriteRule .* https://%{SERVER_NAME}%{REQUEST_URI} [R=301,L] RewriteEngine on RewriteRule /api/(.*) http://excalidraw-storage-backend/api/$1 [P] RewriteRule /socket.io/(.*) http://excalidraw-room/socket.io/$1 [P] RewriteRule /(.*) http://excalidraw/$1 [P,L] 完事后记得在Rewrite Control里开启，Enable Rewrite设置为Yes，不然就白给了。 RewriteCond %{SERVER_PORT} ^80$ RewriteRule .* https://%{SERVER_NAME}%{REQUEST_URI} [R=301,L] 我在重写规则中加入了如上配置，这是自动跳转https，如果你没有https的需要，记得修改。 还记得一个问题吗，excalidraw-room用websocket实现实时通信，我们也需要让它支持websocket。 在OpenLiteSpeed中，它有一个专门的项。去到Web Socket Proxy，新建一条 URL /socket.io/ Address 127.0.0.1:\u003c你设置的excalidraw-room端口\u003e 接下来设置好域名，到General设置，SSL如有需要也可以去SSL项设置。 最后记得在Listener里把Virtual Host加上。 ","date":"2023-01-13","objectID":"/posts/excalidraw%E5%85%A8%E5%8A%9F%E8%83%BD%E8%87%AA%E9%83%A8%E7%BD%B2/:3:0","tags":["Open Source"],"title":"Excalidraw全功能自部署","uri":"/posts/excalidraw%E5%85%A8%E5%8A%9F%E8%83%BD%E8%87%AA%E9%83%A8%E7%BD%B2/"},{"categories":["Tutorials"],"content":"Ending ","date":"2023-01-13","objectID":"/posts/excalidraw%E5%85%A8%E5%8A%9F%E8%83%BD%E8%87%AA%E9%83%A8%E7%BD%B2/:4:0","tags":["Open Source"],"title":"Excalidraw全功能自部署","uri":"/posts/excalidraw%E5%85%A8%E5%8A%9F%E8%83%BD%E8%87%AA%E9%83%A8%E7%BD%B2/"},{"categories":["Tutorials"],"content":"Stack ","date":"2023-01-13","objectID":"/posts/excalidraw%E5%85%A8%E5%8A%9F%E8%83%BD%E8%87%AA%E9%83%A8%E7%BD%B2/:4:1","tags":["Open Source"],"title":"Excalidraw全功能自部署","uri":"/posts/excalidraw%E5%85%A8%E5%8A%9F%E8%83%BD%E8%87%AA%E9%83%A8%E7%BD%B2/"},{"categories":["Tutorials"],"content":"Addtional 不要被我这里的OpenLiteSpeed搞混了，用Nginx什么的本质上没区别，搞对结构即可。 ","date":"2023-01-13","objectID":"/posts/excalidraw%E5%85%A8%E5%8A%9F%E8%83%BD%E8%87%AA%E9%83%A8%E7%BD%B2/:5:0","tags":["Open Source"],"title":"Excalidraw全功能自部署","uri":"/posts/excalidraw%E5%85%A8%E5%8A%9F%E8%83%BD%E8%87%AA%E9%83%A8%E7%BD%B2/"},{"categories":["Tutorials","Sharing - Projects"],"content":"前言 本文是基于论文Detecting Photoshopped Faces by Scripting Photoshop的复现与使用，原始团队在GitHub上公布了代码，我们可以非常简单的在本地部署。 标题有些吸引眼球的意思了，看上去似乎是个社会学文章，其实是技术文章。 不过社会学的也在做就是了。 ","date":"2023-01-13","objectID":"/posts/%E7%9C%9F%E5%81%87%E6%9D%8E%E5%AE%9C%E5%A9%B7-faldetector%E7%9A%84%E5%BA%94%E7%94%A8%E4%B8%8E%E6%95%99%E7%A8%8B/:1:0","tags":["AI"],"title":"真假李宜婷 FALDetector的应用与教程","uri":"/posts/%E7%9C%9F%E5%81%87%E6%9D%8E%E5%AE%9C%E5%A9%B7-faldetector%E7%9A%84%E5%BA%94%E7%94%A8%E4%B8%8E%E6%95%99%E7%A8%8B/"},{"categories":["Tutorials","Sharing - Projects"],"content":"论文 Detecting Photoshopped Faces by Scripting Photoshop [Project Page] [Paper] Sheng-Yu Wang1, Oliver Wang2, Andrew Owens1, Richard Zhang2, Alexei A. Efros1. UC Berkeley1, Adobe Research2. In ICCV, 2019. ","date":"2023-01-13","objectID":"/posts/%E7%9C%9F%E5%81%87%E6%9D%8E%E5%AE%9C%E5%A9%B7-faldetector%E7%9A%84%E5%BA%94%E7%94%A8%E4%B8%8E%E6%95%99%E7%A8%8B/:2:0","tags":["AI"],"title":"真假李宜婷 FALDetector的应用与教程","uri":"/posts/%E7%9C%9F%E5%81%87%E6%9D%8E%E5%AE%9C%E5%A9%B7-faldetector%E7%9A%84%E5%BA%94%E7%94%A8%E4%B8%8E%E6%95%99%E7%A8%8B/"},{"categories":["Tutorials","Sharing - Projects"],"content":"(A) Acknowledgments This repository borrows partially from the pytorch-CycleGAN-and-pix2pix, drn, and the PyTorch torchvision models repositories. ","date":"2023-01-13","objectID":"/posts/%E7%9C%9F%E5%81%87%E6%9D%8E%E5%AE%9C%E5%A9%B7-faldetector%E7%9A%84%E5%BA%94%E7%94%A8%E4%B8%8E%E6%95%99%E7%A8%8B/:2:1","tags":["AI"],"title":"真假李宜婷 FALDetector的应用与教程","uri":"/posts/%E7%9C%9F%E5%81%87%E6%9D%8E%E5%AE%9C%E5%A9%B7-faldetector%E7%9A%84%E5%BA%94%E7%94%A8%E4%B8%8E%E6%95%99%E7%A8%8B/"},{"categories":["Tutorials","Sharing - Projects"],"content":"(B) Citation, Contact If you find this useful for your research, please consider citing this bibtex. Please contact Sheng-Yu Wang \u003csheng-yu_wang at berkeley dot edu\u003e with any comments or feedback. ","date":"2023-01-13","objectID":"/posts/%E7%9C%9F%E5%81%87%E6%9D%8E%E5%AE%9C%E5%A9%B7-faldetector%E7%9A%84%E5%BA%94%E7%94%A8%E4%B8%8E%E6%95%99%E7%A8%8B/:2:2","tags":["AI"],"title":"真假李宜婷 FALDetector的应用与教程","uri":"/posts/%E7%9C%9F%E5%81%87%E6%9D%8E%E5%AE%9C%E5%A9%B7-faldetector%E7%9A%84%E5%BA%94%E7%94%A8%E4%B8%8E%E6%95%99%E7%A8%8B/"},{"categories":["Tutorials","Sharing - Projects"],"content":"部署 介于代码已经开源，使用它并不复杂 ","date":"2023-01-13","objectID":"/posts/%E7%9C%9F%E5%81%87%E6%9D%8E%E5%AE%9C%E5%A9%B7-faldetector%E7%9A%84%E5%BA%94%E7%94%A8%E4%B8%8E%E6%95%99%E7%A8%8B/:3:0","tags":["AI"],"title":"真假李宜婷 FALDetector的应用与教程","uri":"/posts/%E7%9C%9F%E5%81%87%E6%9D%8E%E5%AE%9C%E5%A9%B7-faldetector%E7%9A%84%E5%BA%94%E7%94%A8%E4%B8%8E%E6%95%99%E7%A8%8B/"},{"categories":["Tutorials","Sharing - Projects"],"content":"Windows 在Windows上面部署，和在Linux上差不多，只有一点点不同。 Anaconda Shell 首先我们需要安装Anaconda，这一过程没什么困难的，就跳过了。 之后打开Anaconda Prompt (anaconda3) Anaconda 3\r就会出现一个CMD窗口 (base) C:\\Users\\James\u003e 不过它默认用的是Windows默认的cmd.exe， 我不是很喜欢，我用的是WezTerm。 所以需要一点额外操作， 这个Anaconda Prompt (anaconda3)快捷方式是以下内容 %windir%\\System32\\cmd.exe \"/K\" C:\\Users\\James\\anaconda3\\Scripts\\activate.bat C:\\Users\\James\\anaconda3 有两种选择， 一个是修改快捷方式里的， %windir%\\System32\\cmd.exe \"/K\" 或者在WezTerm里执行 C:\\Users\\James\\anaconda3\\Scripts\\activate.bat C:\\Users\\James\\anaconda3 Anaconda 3 WezTerm\r效果是差不多的。 我们之后的命令都需要在这里面操作，当报错的时候请检查是不是在Anaconda Prompt (anaconda3)里进行的。 Anaconda Channels 在国内访问默认的源可能有些慢和不稳定，我们可以使用清华大学的镜像 这样通过如下命令添加 conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/ conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2/ 设置搜索时显示通道地址，这样可以方便我们发现有没有正确配置源 conda config --set show_channel_urls yes Environment 之后我们需要在Anaconda里创建一个虚拟环境，这里取名为FALD。 conda create -n FALD python=3.6 这一步可能会消耗一点时间， 它会安装一些必要组件，conda询问时记得同意, 输入yes + Enter。 在完成之后，我们再进入FALD conda activate FALD 记住，往后我们每次要对FALdetector进行操作的时候都要进入这个环境。 Work Path 之后我们需要按照论文里的指示，配置环境 首先，需要拉取源码，位于GitHub FALdetector 不过我为大家准备了处理好的版本，位于FALdetector 这是因为，你需要人工下载两个东西，一个是模型，一个是测试集。 原文提供了两个脚本 download_weights.sh download_valset.sh 不过shell脚本在Windows上并不好配置，我们只能手动下载了。 如果你有动手能力，那也可以手动地把这两个东西下到位。 或者使用我这个放好了的版本。 https://drive.jamesflare.com/api/v3/file/get/86171/FALdetector.7z?sign=aErdfOxvXdZH89kAhthihQm1DsC4E3qnDunWXgApHLU%3D%3A0 新建一个文件夹，然后在放入解压的文件之前， 启用Windows区分大小写功能 fsutil.exe file SetCaseSensitiveInfo 文件夹位置 enable 这是保险起见，不做应该也没问题， 请在一个新的cmd窗口以管理员执行。 下载后我们解压到那个启用Windows区分大小写功能的文件夹， 这里我放到桌面。 之后我们需要进入我们解压好的FALdetector目录， 在这里是C:\\Users\\James\\Desktop\\FALdetector cd C:\\Users\\James\\Desktop\\FALdetector 不出意外你的输出应该类似于 (FALD) C:\\Users\\James\\Desktop\\FALdetector\u003e Requirements 接下来我们需要配置一下依赖， 在用pip安装的时候，我选择了使用镜像来加速 使用以下参数 -i https://pypi.tuna.tsinghua.edu.cn/simple 注意，需要在环境FALD下操作 安装cmake pip install cmake -i https://pypi.tuna.tsinghua.edu.cn/simple 和一些其他包 dlib mmcv scipy numpy matplotlib opencv_python Pillow torch\u003e=0.4.0 torchvision conda install dlib conda install pytorch torchvision torchaudio cudatoolkit=10.2 -c pytorch pip install mmcv scipy numpy matplotlib opencv_python Pillow -i https://pypi.tuna.tsinghua.edu.cn/simple ","date":"2023-01-13","objectID":"/posts/%E7%9C%9F%E5%81%87%E6%9D%8E%E5%AE%9C%E5%A9%B7-faldetector%E7%9A%84%E5%BA%94%E7%94%A8%E4%B8%8E%E6%95%99%E7%A8%8B/:3:1","tags":["AI"],"title":"真假李宜婷 FALDetector的应用与教程","uri":"/posts/%E7%9C%9F%E5%81%87%E6%9D%8E%E5%AE%9C%E5%A9%B7-faldetector%E7%9A%84%E5%BA%94%E7%94%A8%E4%B8%8E%E6%95%99%E7%A8%8B/"},{"categories":["Tutorials","Sharing - Projects"],"content":"运行 所有准备工作已经就绪。 项目拥有两个程序 global_classifier.py local_detector.py global_classifier.py用于给出概率，输出类似 Probibility being modified by Photoshop FAL: 98.82% 使用方法为 python global_classifier.py --input_path \"输入文件\" --model_path weights/global.pth 示例 (FALD) C:\\Users\\James\\Desktop\\FALdetector\u003epython global_classifier.py --input_path \"examples/sampleVivanLi (13).jpg\" --model_path weights/global.pth Probibility being modified by Photoshop FAL: 2.72% local_detector.py 用于生成热力图， 使用方法为 python local_detector.py --input_path \"输入文件\" --model_path weights/local.pth --dest_folder 输出目录 示例 (FALD) C:\\Users\\James\\Desktop\\FALdetector\u003epython local_detector.py --input_path \"examples/sampleVivanLi (154).jpg\" --model_path weights/local.pth --dest_folder out/ 然后我们就可以在out文件夹下找到生成的三张图片了 Vivan Li 154 Heatmap\r第一张是dlib识别并裁切的人像，也是FALdetector的输入文件， 第二张是FALdetector生成的热力图，体现了AI对光流场的预测，显示了潜在的篡改区域， 第三张是FALdetector基于预测结果，尝试对图像进行的还原。 根据我的观察，他们有些很准，有些还是比较困难，颜色，像素，光照都很影响结果。 仅供参考 ","date":"2023-01-13","objectID":"/posts/%E7%9C%9F%E5%81%87%E6%9D%8E%E5%AE%9C%E5%A9%B7-faldetector%E7%9A%84%E5%BA%94%E7%94%A8%E4%B8%8E%E6%95%99%E7%A8%8B/:4:0","tags":["AI"],"title":"真假李宜婷 FALDetector的应用与教程","uri":"/posts/%E7%9C%9F%E5%81%87%E6%9D%8E%E5%AE%9C%E5%A9%B7-faldetector%E7%9A%84%E5%BA%94%E7%94%A8%E4%B8%8E%E6%95%99%E7%A8%8B/"},{"categories":["Tutorials","Sharing - Projects"],"content":"额外 额外我还找了个叫Asshiteru的人的图像，这是其中一张 (FALD) C:\\Users\\James\\Desktop\\FALdetector\u003epython global_classifier.py --input_path \"examples/aishiteruSample (36).jpg\" --model_path weights/global.pth Probibility being modified by Photoshop FAL: 97.92% (FALD) C:\\Users\\James\\Desktop\\FALdetector\u003epython local_detector.py --input_path \"examples/aishiteruSample (36).jpg\" --model_path weights/local.pth --dest_folder out/36/ Asshiteru 36 Heatmap\r两个完整例子可从下方下载 //FALDVivanLi.zip https://drive.jamesflare.com/api/v3/file/get/86172/FALDVivanLi.zip?sign=ca-b00_d0GbBn40HsBG3v8IaZTY2KlmsW0R-ZLLFpr8%3D%3A0 //FALDAsshiteru.zip https://drive.jamesflare.com/api/v3/file/get/86170/FALDAsshiteru.zip?sign=9G5oCp9uapNbUvmOeyih87HxR2Dz_t3PUx64tcvnyqE%3D%3A0 ","date":"2023-01-13","objectID":"/posts/%E7%9C%9F%E5%81%87%E6%9D%8E%E5%AE%9C%E5%A9%B7-faldetector%E7%9A%84%E5%BA%94%E7%94%A8%E4%B8%8E%E6%95%99%E7%A8%8B/:5:0","tags":["AI"],"title":"真假李宜婷 FALDetector的应用与教程","uri":"/posts/%E7%9C%9F%E5%81%87%E6%9D%8E%E5%AE%9C%E5%A9%B7-faldetector%E7%9A%84%E5%BA%94%E7%94%A8%E4%B8%8E%E6%95%99%E7%A8%8B/"},{"categories":["Tutorials","Sharing - Projects"],"content":"总结 这无疑给我们提供了一个全新的视角，在此之前我认为Vivan的图像应该大部分是被篡改过的，但是现在我改变主意了。 330个样本里，拥有明显痕迹的也就20+。 87%+以上都是几乎原图，这与我们的主观严重不符。 或许很少有人会有把一个人300+张图像放在一起观察的机会， 但是对我而言，依然有数张图像我认为是非常好看的，比如Sample13，而且Probibility being modified by Photoshop FAL的值非常低。 可见，PS技术可能并没有起到确定性作用，更多的还是构图和摄影技术。 Asshiteru，我对她是谁，几乎没有概念。 不过，她超过半数的图像都有明显的篡改痕迹，听说她挺有名的。 小巫见大巫了，属于是。 ","date":"2023-01-13","objectID":"/posts/%E7%9C%9F%E5%81%87%E6%9D%8E%E5%AE%9C%E5%A9%B7-faldetector%E7%9A%84%E5%BA%94%E7%94%A8%E4%B8%8E%E6%95%99%E7%A8%8B/:6:0","tags":["AI"],"title":"真假李宜婷 FALDetector的应用与教程","uri":"/posts/%E7%9C%9F%E5%81%87%E6%9D%8E%E5%AE%9C%E5%A9%B7-faldetector%E7%9A%84%E5%BA%94%E7%94%A8%E4%B8%8E%E6%95%99%E7%A8%8B/"},{"categories":["Tutorials","Sharing - Projects"],"content":"缺点 这个项目是Adobe资助的，3年了，他们也没有放出模型训练的细节和源码，可能有一些商业的考量在里面吧。 带来的结果就是有不少局限性。 比如对色彩不敏感，对轮廓很敏感。 就是说，美白，磨皮，大概率是对结果没有影响的。而且在这些例子里，诸如瘦脸，增大眼睛等功能也没有很激进，于是乎对判别也有挑战。 还有对脸以外的区域也没有判别力。 ","date":"2023-01-13","objectID":"/posts/%E7%9C%9F%E5%81%87%E6%9D%8E%E5%AE%9C%E5%A9%B7-faldetector%E7%9A%84%E5%BA%94%E7%94%A8%E4%B8%8E%E6%95%99%E7%A8%8B/:7:0","tags":["AI"],"title":"真假李宜婷 FALDetector的应用与教程","uri":"/posts/%E7%9C%9F%E5%81%87%E6%9D%8E%E5%AE%9C%E5%A9%B7-faldetector%E7%9A%84%E5%BA%94%E7%94%A8%E4%B8%8E%E6%95%99%E7%A8%8B/"},{"categories":["Tutorials","Sharing - Projects"],"content":"预告 我们爬取了Instagram上一部分，30位博主，大约22,000张图像，一个更大样本的社会学研究，测试正在进行。 ","date":"2023-01-13","objectID":"/posts/%E7%9C%9F%E5%81%87%E6%9D%8E%E5%AE%9C%E5%A9%B7-faldetector%E7%9A%84%E5%BA%94%E7%94%A8%E4%B8%8E%E6%95%99%E7%A8%8B/:8:0","tags":["AI"],"title":"真假李宜婷 FALDetector的应用与教程","uri":"/posts/%E7%9C%9F%E5%81%87%E6%9D%8E%E5%AE%9C%E5%A9%B7-faldetector%E7%9A%84%E5%BA%94%E7%94%A8%E4%B8%8E%E6%95%99%E7%A8%8B/"}]